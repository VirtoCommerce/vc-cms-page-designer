{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./main.ts","webpack:///./services/http.service.ts","webpack:///./block-vm.factory.ts","webpack:///./block.view-model.ts","webpack:///./services/messages.service.ts","webpack:///./app.ts","webpack:///./view.ts","webpack:///./controller.ts","webpack:///./list.view-model.ts","webpack:///./environment.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","http_service_1","block_vm_factory_1","messages_service_1","app_1","view_1","controller_1","list_view_model_1","environment_1","document","addEventListener","targetElement","getElementById","http","HttpService","Environment","RenderBlockApiUrl","messages","MessagesService","DesignerUrl","view","View","blocksFactory","BlocksViewModelFactory","listViewModel","ListViewModel","controller","Controller","App","run","[object Object]","endpoint","this","model","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","onload","evt","responseText","trim","block_view_model_1","BlockViewModel","html","createElement","element","eventListener","remove","index","force","post","then","fromHtml","setElement","div","innerHTML","result","firstChild","elementHover","parentOrigin","message","window","parent","postMessage","type","init","reloadResources","event","data","messageReceived","suffix","URLSearchParams","location","search","Date","getTime","nodes","getElementsByTagName","head","item","generateLinkNode","url","setAttribute","length","styleSheet","href","startsWith","origin","endsWith","newlink","replaceChild","container","console","log","children","currentElement","replaceWith","appendChild","vm","messageSerice","renderComplete","block","highlightBlock","blockHover","elementClick","selectBlock","addOrUpdate","reload","scrollTo","removeBlock","cloneBlock","reloadPage","moveBlock","factory","blocks","source","removeBlockById","content","asKey","id","getBlock","createBlockViewModel","setBlock","render","highlightedBlock","unlight","selectedBlock","highlight","getBlockById","select","deselect","indexOf","newBlock","addBlock","destination","filter","x","forEach","current","currentIndex","splice","newIndex","promises","map","all","raiseRenderComplete","push","setBlockById","getBlockViewModel"],"mappings":"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","file":"main.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { HttpService } from './services/http.service';\r\nimport { BlocksViewModelFactory } from './block-vm.factory';\r\nimport { MessagesService } from './services/messages.service';\r\nimport { App } from './app';\r\nimport { View } from './view';\r\nimport { Controller } from './controller';\r\nimport { ListViewModel } from './list.view-model';\r\nimport { Environment } from './environment';\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    const targetElement = document.getElementById(\"designer-preview\");\r\n    const http = new HttpService(Environment.RenderBlockApiUrl);\r\n    const messages = new MessagesService(Environment.DesignerUrl);\r\n\r\n    const view = new View(targetElement);\r\n    const blocksFactory = new BlocksViewModelFactory(http);\r\n    const listViewModel = new ListViewModel(view, blocksFactory);\r\n    const controller = new Controller(listViewModel, messages);\r\n    const app = new App(controller);\r\n    app.run();\r\n});\r\n","import { BlockModel } from '../models';\r\n\r\nexport class HttpService {\r\n\r\n    constructor(private endpoint: string) { }\r\n\r\n    get() {\r\n\r\n    }\r\n\r\n    post(model: any): Promise<string> {\r\n        // https://gist.github.com/codecorsair/e14ec90cee91fa8f56054afaa0a39f13\r\n        return new Promise<string>((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.open('post', this.endpoint);\r\n\r\n            xhr.setRequestHeader('Accept', 'application/json, text/javascript, text/plain')\r\n            xhr.setRequestHeader('Cache-Control', 'no-cache');\r\n            xhr.setRequestHeader('Content-Type', 'application/json');\r\n            xhr.send(JSON.stringify(model));\r\n            // xhr.timeout = timeout;\r\n            xhr.onload = evt => {\r\n                // const result = {\r\n                //     ok: xhr.status >= 200 && xhr.status < 300,\r\n                //     status: xhr.status,\r\n                //     statusText: xhr.statusText,\r\n                //     headers: xhr.getAllResponseHeaders(),\r\n                //     data: xhr.responseText\r\n                // };\r\n                resolve(xhr.responseText.trim());\r\n                // this.blocks.push(model); or replace\r\n            };\r\n            // xhr.onerror = evt => {\r\n            //   resolve(errorResponse(xhr, 'Failed to make request.'));\r\n            // };\r\n            // xhr.ontimeout = evt => {\r\n            //   resolve(errorResponse(xhr, 'Request took longer than expected.'));\r\n            // };\r\n        });\r\n    }\r\n\r\n/*\r\n\r\n\r\n\r\n\r\n*/\r\n\r\n\r\n\r\n\r\n}","import { HttpService } from './services/http.service';\r\nimport { BlockModel } from './models/block.model';\r\nimport { BlockViewModel } from './block.view-model';\r\n\r\nexport class BlocksViewModelFactory {\r\n\r\n    constructor(private http: HttpService) { }\r\n\r\n    getBlockViewModel(model: BlockModel): BlockViewModel {\r\n        return new BlockViewModel(model, this.http);\r\n    }\r\n}","import { BlockEventListener } from './block.event-listener';\r\nimport { HttpService } from './services/http.service';\r\nimport { BlockModel } from './models';\r\nimport { View } from './view';\r\n\r\nexport class BlockViewModel {\r\n    html: string;\r\n    element: HTMLElement;\r\n\r\n    eventListener: BlockEventListener;\r\n\r\n    constructor(public model: BlockModel, private http: HttpService) { }\r\n\r\n    fromHtml(html: string) {\r\n        this.html = html;\r\n        this.createElement();\r\n    }\r\n\r\n    select() {\r\n        // TODO: set element properties\r\n    }\r\n\r\n    deselect() {\r\n        // TODO: set element properties\r\n    }\r\n\r\n    remove() {\r\n        if (!!this.element) {\r\n            this.eventListener = null;\r\n            this.element.remove();\r\n        }\r\n    }\r\n\r\n    highlight() {\r\n    }\r\n\r\n    unlight() {\r\n\r\n    }\r\n\r\n    render(view: View, index: number, force: boolean = false): Promise<BlockViewModel> {\r\n        // TODO: add element to view\r\n        if (force || !this.element) {\r\n            return this.http.post(this.model).then(html => {\r\n                this.fromHtml(html);\r\n                view.setElement(index, this.element);\r\n                return this;\r\n            });\r\n        }\r\n        return Promise.resolve(this);\r\n    }\r\n\r\n    private createElement() {\r\n        const div = document.createElement('div');\r\n        div.innerHTML = this.html;\r\n        const result = <HTMLElement>div.firstChild;\r\n        result.addEventListener('mouseover', () => this.eventListener.elementHover(this));\r\n        // TODO: add events\r\n        //      hover\r\n        //      mouse up\r\n        //      mouse down\r\n        //      mouse move\r\n        this.element = result;\r\n    }\r\n\r\n}\r\n","export class MessagesService {\r\n\r\n    constructor(private parentOrigin: string) { }\r\n\r\n    renderComplete() {\r\n        this.send('render-complete');\r\n    }\r\n\r\n    blockHover(model) {\r\n        this.send('hover')\r\n    }\r\n\r\n    selectBlock(model) {\r\n        this.send('select')\r\n    }\r\n\r\n    private send(message: string) {\r\n        window.parent.postMessage({ type: message }, this.parentOrigin);\r\n    }\r\n}","import { MessagesService } from './services/messages.service';\r\nimport { BlockModel } from './models';\r\nimport { Controller } from './controller';\r\n\r\nexport class App {\r\n\r\n    constructor(private controller: Controller) { }\r\n\r\n    run() {\r\n        this.init();\r\n        this.reloadResources();\r\n        // this.ready();\r\n    }\r\n\r\n    private init() {\r\n        window.addEventListener('message', (event: MessageEvent) => {\r\n            var data = event.data;\r\n            this.controller.messageReceived(data);\r\n        });\r\n    }\r\n\r\n    private reloadResources() {\r\n        var urlParams = new URLSearchParams(window.location.search);\r\n        var prefix = urlParams.get('preview_mode');\r\n        var suffix = \"?preview_mode=\" + prefix + \"&v=\" + (new Date().getTime());\r\n\r\n        var nodes = document.getElementsByTagName(\"link\");\r\n        var head = document.getElementsByTagName(\"head\").item(0);\r\n\r\n        function generateLinkNode(url) {\r\n            var result = document.createElement(\"link\");\r\n            result.setAttribute(\"rel\", \"stylesheet\");\r\n            result.setAttribute(\"type\", \"text/css\");\r\n            result.setAttribute(\"href\", url);\r\n            return result;\r\n        }\r\n\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            var styleSheet = nodes[i];\r\n            if (styleSheet.href && styleSheet.href.startsWith(document.location.origin) && styleSheet.href.endsWith(\".css\")) {\r\n                var url = styleSheet.href + suffix;\r\n                var newlink = generateLinkNode(url);\r\n                head.replaceChild(newlink, styleSheet);\r\n            }\r\n        }\r\n    }\r\n\r\n    // private syncView() {\r\n    //     // sync container's children with blocks list\r\n    //     this.blocks.forEach((block, index) => {\r\n    //         const element = this.container.children.item(index);\r\n    //         if (!element) {\r\n    //             this.container.appendChild(block.element);\r\n    //         } else if (element != block.element){\r\n    //             this.container.replaceChild(block.element, element);\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n\r\n\r\n    // private reloadPage(data: MessagePageModel) {\r\n    //     // data.content = [{}] - list of blocks\r\n    //     this.blocks = [];\r\n    //     data.content.filter(x => x.type !== 'settings').forEach(x => this.addBlock(<BlockModel>{\r\n    //         id: x.id,\r\n    //         source: x,\r\n    //         html: '',\r\n    //         element: null\r\n    //     }));\r\n\r\n    //     Promise.all(this.blocks.map(x => this.doRequest(x))).then(() => {\r\n    //         this.syncView();\r\n    //         window.parent.postMessage({ type: 'render-complete' }, this.DesignerUrl);\r\n    //     })\r\n    // }\r\n\r\n    // private moveBlock(data: MessageModel) {\r\n    //     const current = this.blocks[data.content.currentIndex];\r\n    //     this.blocks.splice(data.content.currentIndex, 1);\r\n    //     this.blocks.splice(data.content.newIndex, 0, current);\r\n    //     this.scrollTo({ content: { id: current.id } });\r\n    // }\r\n\r\n    // private cloneBlock(data: MessageModel) {\r\n    //     /* data = { type: \"clone\", content: { source: id, destination: id } } */\r\n    //     const block = this.getBlock(data.content.source);\r\n    //     const index = this.blocks.indexOf(block);\r\n    //     const newBlock = {\r\n    //         ...block,\r\n    //         id: data.content.destination,\r\n    //         element: this.createElement(block.html)\r\n    //     };\r\n    //     this.addBlock(newBlock, index + 1);\r\n    //     this.selectBlock({ content: { id: data.content.destination } });\r\n    // }\r\n\r\n    // private addOrUpdate(data: MessageModel) {\r\n    //     if (!!data.content) {\r\n    //         const model = this.getBlock(data.content.id) || <BlockModel>{ id: data.content.id };\r\n    //         model.source = data.content;\r\n    //         this.addBlock(model);\r\n    //         this.doRequest(model).then(() => {\r\n    //             this.syncView();\r\n    //             this.selectBlock(data);\r\n    //         });\r\n    //     }\r\n    // }\r\n\r\n    // private removeBlock(data: MessageModel) {\r\n    //     const block = this.deleteBlock(data.content.id);\r\n    //     block.element.remove();\r\n    // }\r\n\r\n    // private selectedBlock: BlockModel = null;\r\n    // private selectBlock(data: MessageModel) {\r\n    //     const block = this.getBlock(data.content.id);\r\n    //     if (!!this.selectedBlock && this.selectedBlock != block) {\r\n    //         this.selectedBlock.element.className = this.selectedBlock.element.className.split(' ').filter(c => c.trim() != 'active').join(' ');\r\n    //         this.selectedBlock = null;\r\n    //     }\r\n    //     if (!!block && this.selectedBlock != block) {\r\n    //         block.element.className += ' active';\r\n    //         this.selectedBlock = block;\r\n    //     }\r\n    // }\r\n\r\n    // private scrollTo(data: MessageModel) {\r\n    //     const block = this.getBlock(data.content.id);\r\n    //     // scroll to block.element\r\n    // }\r\n\r\n    // private createElement(html: string): HTMLElement {\r\n    //     const div = document.createElement('div');\r\n    //     div.innerHTML = html;\r\n    //     const result = <HTMLElement>div.firstChild;\r\n    //     return result;\r\n    // }\r\n\r\n    // private doRequest(model: BlockModel): Promise<BlockModel> {\r\n    //     return this.http.post(model.source).then(html => {\r\n    //         model.html = html;\r\n    //         model.element = this.createElement(html);\r\n    //         return model;\r\n    //     })\r\n    // }\r\n\r\n    // todo: select\r\n    // todo: dnd\r\n\r\n    // private ready() {\r\n    //     var urlParams = new URLSearchParams(window.location.search);\r\n    //     var prefix = urlParams.get('preview_mode');\r\n    //     var suffix = \"?preview_mode=\" + prefix + \"&v=\" + (new Date().getTime());\r\n\r\n    //     var nodes = document.getElementsByTagName(\"link\");\r\n    //     var head = document.getElementsByTagName(\"head\").item(0);\r\n\r\n    //     function generateLinkNode(url) {\r\n    //         var result = document.createElement(\"link\");\r\n    //         result.setAttribute(\"rel\", \"stylesheet\");\r\n    //         result.setAttribute(\"type\", \"text/css\");\r\n    //         result.setAttribute(\"href\", url);\r\n    //         return result;\r\n    //     }\r\n\r\n    //     for (var i = 0; i < nodes.length; i++) {\r\n    //         var styleSheet = nodes[i];\r\n    //         if (styleSheet.href && styleSheet.href.startsWith(document.location.origin) && styleSheet.href.endsWith(\".css\")) {\r\n    //             var url = styleSheet.href + suffix;\r\n    //             var newlink = generateLinkNode(url);\r\n    //             head.replaceChild(newlink, styleSheet);\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    // private addBlock(model: BlockModel, index: number = null) {\r\n    //     const key = this.asKey(model.id);\r\n    //     const current = this.getBlock(model.id);\r\n    //     if (!!current) {\r\n    //         const index = this.blocks.indexOf(current);\r\n    //         this.blocks[index] = model;\r\n    //     } else {\r\n    //         if (index !== null) {\r\n    //             this.blocks.splice(index, 0, model);\r\n    //         } else {\r\n    //             this.blocks.push(model);\r\n    //         }\r\n\r\n    //     }\r\n    //     this.blocks[key] = model;\r\n    // }\r\n\r\n    // private getBlock(id: number): BlockModel {\r\n    //     const key = this.asKey(id);\r\n    //     return this.blocks[key];\r\n    // }\r\n\r\n    // private deleteBlock(id: number) : BlockModel{\r\n    //     const key = this.asKey(id);\r\n    //     const block = this.getBlock(id);\r\n    //     delete this.blocks[key];\r\n    //     const index = this.blocks.indexOf(block);\r\n    //     this.blocks.splice(index, 1);\r\n    //     return block;\r\n    // }\r\n\r\n    // private asKey(id: number): string {\r\n    //     return `instanse${id}`;\r\n    // }\r\n}\r\n\r\n\r\n","export class View {\r\n\r\n    private shadowContainer: HTMLElement;\r\n\r\n    constructor(private container: HTMLElement) {\r\n        console.log(container);\r\n    }\r\n\r\n    setElement(index: number, element: HTMLElement) {\r\n        if (this.container.children.length > index) {\r\n            const currentElement = this.container.children.item(index);\r\n            if (currentElement != element) {\r\n                currentElement.replaceWith(element);\r\n            }\r\n        } else {\r\n            this.container.appendChild(element);\r\n        }\r\n    }\r\n}","import { MessageModel, MessagePageModel } from './models/message.model';\r\nimport { ListViewModel } from './list.view-model';\r\nimport { MessagesService } from './services/messages.service';\r\nimport { BlockModel } from './models';\r\nimport { BlockViewModel } from './block.view-model';\r\n\r\nexport class Controller {\r\n\r\n    constructor(private vm: ListViewModel, private messageSerice: MessagesService) {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        // навешиваем события\r\n        this.vm.renderComplete = () => {\r\n            this.messageSerice.renderComplete();\r\n        };\r\n        this.vm.elementHover = (block: BlockViewModel) => {\r\n            this.vm.highlightBlock(block);\r\n            this.messageSerice.blockHover(block.model);\r\n        };\r\n        this.vm.elementClick = (block: BlockViewModel) => {\r\n            this.messageSerice.selectBlock(block.model);\r\n        };\r\n    }\r\n\r\n    messageReceived(message: MessageModel) {\r\n        switch (message.type) {\r\n            case 'addOrUpdate':\r\n                this.vm.addOrUpdate(message);\r\n                break;\r\n            case 'settings':\r\n                document.location.reload();\r\n                break;\r\n            case 'scrollTo':\r\n                this.vm.scrollTo(message);\r\n                break;\r\n            case 'select':\r\n                this.vm.selectBlock(message);\r\n                break;\r\n            case 'remove':\r\n                this.vm.removeBlock(message);\r\n                break;\r\n            case 'clone':\r\n                this.vm.cloneBlock(message);\r\n                break;\r\n            case 'page':\r\n                this.vm.reloadPage(<MessagePageModel>message);\r\n                break;\r\n            case 'move':\r\n                this.vm.moveBlock(message);\r\n                break;\r\n            default:\r\n                console.log(message.type, message);\r\n                break;\r\n        }\r\n    }\r\n\r\n    // start drag\r\n    // drag move\r\n    // stop drag\r\n}\r\n","import { BlockEventListener } from './block.event-listener';\r\nimport { MessageModel, MessagePageModel } from './models/message.model';\r\nimport { View } from './view';\r\nimport { BlockViewModel } from './block.view-model';\r\nimport { BlockModel } from './models';\r\nimport { BlocksViewModelFactory } from './block-vm.factory';\r\n\r\nexport class ListViewModel implements BlockEventListener {\r\n\r\n    private blocks: BlockViewModel[] = [];\r\n    private selectedBlock: BlockViewModel;\r\n    private highlightedBlock: BlockViewModel;\r\n\r\n    renderComplete = () => { };\r\n\r\n    elementHover = (source: BlockViewModel) => { };\r\n    elementClick = (source: BlockViewModel) => { };\r\n\r\n    constructor(private view: View, private factory: BlocksViewModelFactory) { }\r\n\r\n    // public\r\n\r\n    addOrUpdate(message: MessageModel) {\r\n        this.removeBlockById(null);\r\n        if (!!message.content) {\r\n            const key = this.asKey(message.content.id);\r\n            const vm = this.getBlock(key) || this.createBlockViewModel(message.content);\r\n            const index = this.setBlock(key, vm);\r\n            vm.render(this.view, index, true);\r\n        }\r\n    }\r\n\r\n    scrollTo(message: MessageModel) {\r\n        // TODO:\r\n    }\r\n\r\n    highlightBlock(vm: BlockViewModel) {\r\n        if (!!this.highlightedBlock) {\r\n            this.highlightedBlock.unlight();\r\n            this.highlightedBlock = null;\r\n        }\r\n        if (this.selectedBlock !== vm) {\r\n            this.highlightedBlock = vm;\r\n            vm.highlight();\r\n        }\r\n    }\r\n\r\n    selectBlock(message: MessageModel) {\r\n        const vm = this.getBlockById(message.content.id);\r\n        vm.select();\r\n        if (!!this.selectedBlock) {\r\n            this.selectedBlock.deselect();\r\n        }\r\n        this.selectedBlock = vm;\r\n    }\r\n\r\n    removeBlock(message: MessageModel) {\r\n        this.removeBlockById(message.content.id);\r\n    }\r\n\r\n    cloneBlock(message: MessageModel) {\r\n        const block = this.getBlockById(message.content.source);\r\n        const index = this.blocks.indexOf(block);\r\n        const newBlock = this.createBlockViewModel(block.model);\r\n        newBlock.fromHtml(block.html);\r\n        this.addBlock(newBlock, index + 1);\r\n        this.selectBlock({ content: { id: message.content.destination } });\r\n    }\r\n\r\n    reloadPage(message: MessagePageModel) {\r\n        this.blocks = [];\r\n        message.content.filter(x => x.type !== 'settings').forEach(x => this.addBlock(this.createBlockViewModel(x)));\r\n        this.render();\r\n    }\r\n\r\n    moveBlock(message: MessageModel) {\r\n        const current = this.blocks[message.content.currentIndex];\r\n        this.blocks.splice(message.content.currentIndex, 1);\r\n        this.blocks.splice(message.content.newIndex, 0, current);\r\n        this.scrollTo({ content: { id: current.model.id } });\r\n    }\r\n\r\n    // private\r\n\r\n    private render() {\r\n        const promises = this.blocks.map((x, index) => x.render(this.view, index));\r\n        Promise.all(promises).then(() => this.raiseRenderComplete());\r\n    }\r\n\r\n    private raiseRenderComplete() {\r\n        this.renderComplete();\r\n    }\r\n\r\n    private removeBlockById(id: number) {\r\n        const key = this.asKey(id);\r\n        const vm = this.getBlock(key);\r\n        if (!!vm) {\r\n            const index = this.blocks.indexOf(vm);\r\n            if (this.selectedBlock == vm) {\r\n                this.selectedBlock = null;\r\n            }\r\n            vm.remove();\r\n            this.blocks.splice(index, 1);\r\n            delete this.blocks[key];\r\n        }\r\n    }\r\n\r\n    private addBlock(block: BlockViewModel, index: number = null) {\r\n        if (index === null) {\r\n            this.blocks.push(block);\r\n        } else {\r\n            this.blocks.splice(index, 0, block);\r\n        }\r\n        this.setBlockById(block.model.id, block);\r\n    }\r\n\r\n    private setBlock(key: string, vm: BlockViewModel): number {\r\n        let index = this.blocks.indexOf(vm);\r\n        if (index === -1) {\r\n            index = this.blocks.length;\r\n            this.blocks.push(vm);\r\n        }\r\n        this.blocks[key] = vm;\r\n        return index;\r\n    }\r\n\r\n    private setBlockById(id: number, vm: BlockViewModel) {\r\n        const key = this.asKey(id);\r\n        this.setBlock(key, vm);\r\n    }\r\n\r\n    private getBlock(key: string): BlockViewModel {\r\n        return this.blocks[key];\r\n    }\r\n\r\n    private getBlockById(id: number): BlockViewModel {\r\n        const key = this.asKey(id);\r\n        return this.getBlock(key);\r\n    }\r\n\r\n    private asKey(id: number): string {\r\n        if (!!id || id == 0)\r\n            return `instanse${id}`;\r\n        return 'preview-instance';\r\n    }\r\n\r\n    private createBlockViewModel(model: BlockModel) {\r\n        const result = this.factory.getBlockViewModel(model);\r\n        result.eventListener = this;\r\n        return result;\r\n    }\r\n}\r\n","export const Environment = {\r\n    RenderBlockApiUrl: '/designer-preview/block',\r\n    DesignerUrl: 'http://localhost:4200/'\r\n}\r\n"],"sourceRoot":""}