{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./main.ts","webpack:///./services/http.service.ts","webpack:///./services/messages.service.ts","webpack:///./app.ts","webpack:///./view.ts","webpack:///./list.controller.ts","webpack:///./block.view-model.ts","webpack:///./environment.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","http_service_1","messages_service_1","app_1","view_1","list_controller_1","environment_1","document","addEventListener","targetElement","getElementById","http","HttpService","Environment","RenderBlockApiUrl","messages","MessagesService","DesignerUrl","view","View","listController","ListController","App","run","[object Object]","endpoint","this","model","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","onload","evt","responseText","trim","parentOrigin","id","message","msg","assign","type","console","log","window","parent","postMessage","controller","init","reloadResources","event","data","messageReceived","suffix","URLSearchParams","location","search","Date","getTime","nodes","getElementsByTagName","head","item","generateLinkNode","url","result","createElement","setAttribute","length","styleSheet","href","startsWith","origin","endsWith","newlink","replaceChild","container","highlightDiv","createShadowElement","selectDiv","body","appendChild","style","border","display","eventListener","elementClick","placeElementHover","unlight","deselect","element","targetPosition","measureElement","top","innerHeight","scroll","behavior","list","innerHTML","forEach","x","index","currentElement","children","insertBefore","select","source","target","rect","left","height","width","position","zIndex","target_width","offsetWidth","target_height","offsetHeight","gleft","gtop","moonwalk","_parent","offsetTop","offsetLeft","offsetParent","block_view_model_1","messageSerice","blocks","renderComplete","addOrUpdate","reload","scrollTo","selectBlock","removeBlock","cloneBlock","reloadPage","moveBlock","highlightedBlock","selectedBlock","highlight","blockHover","vm","removeBlockById","content","asKey","getBlock","createBlockViewModel","setBlock","generateElement","then","setElement","getBlockById","block","indexOf","newBlock","destination","fromHtml","html","insertElement","addBlock","filter","render","current","currentIndex","splice","newIndex","promises","map","all","setList","raiseRenderComplete","force","post","remove","push","setBlockById","BlockViewModel","hoverListener","elementHover","_model","removeEventListener","div","firstChild"],"mappings":"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","file":"designer.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { HttpService } from './services/http.service';\r\nimport { MessagesService } from './services/messages.service';\r\nimport { App } from './app';\r\nimport { View } from './view';\r\nimport { ListController } from './list.controller';\r\nimport { Environment } from './environment';\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    const targetElement = document.getElementById(\"designer-preview\");\r\n    const http = new HttpService(Environment.RenderBlockApiUrl);\r\n    const messages = new MessagesService(Environment.DesignerUrl);\r\n\r\n    const view = new View(targetElement);\r\n    const listController = new ListController(view, http, messages);\r\n    const app = new App(listController);\r\n    app.run();\r\n});\r\n","import { BlockModel } from '../models';\r\n\r\nexport class HttpService {\r\n\r\n    constructor(private endpoint: string) { }\r\n\r\n    get() {\r\n\r\n    }\r\n\r\n    post(model: any): Promise<string> {\r\n        // https://gist.github.com/codecorsair/e14ec90cee91fa8f56054afaa0a39f13\r\n        return new Promise<string>((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.open('post', this.endpoint);\r\n\r\n            xhr.setRequestHeader('Accept', 'application/json, text/javascript, text/plain')\r\n            xhr.setRequestHeader('Cache-Control', 'no-cache');\r\n            xhr.setRequestHeader('Content-Type', 'application/json');\r\n            xhr.send(JSON.stringify(model));\r\n            // xhr.timeout = timeout;\r\n            xhr.onload = evt => {\r\n                // const result = {\r\n                //     ok: xhr.status >= 200 && xhr.status < 300,\r\n                //     status: xhr.status,\r\n                //     statusText: xhr.statusText,\r\n                //     headers: xhr.getAllResponseHeaders(),\r\n                //     data: xhr.responseText\r\n                // };\r\n                resolve(xhr.responseText.trim());\r\n                // this.blocks.push(model); or replace\r\n            };\r\n            // xhr.onerror = evt => {\r\n            //   resolve(errorResponse(xhr, 'Failed to make request.'));\r\n            // };\r\n            // xhr.ontimeout = evt => {\r\n            //   resolve(errorResponse(xhr, 'Request took longer than expected.'));\r\n            // };\r\n        });\r\n    }\r\n\r\n/*\r\n\r\n\r\n\r\n\r\n*/\r\n\r\n\r\n\r\n\r\n}","export class MessagesService {\r\n\r\n    constructor(private parentOrigin: string) { }\r\n\r\n    renderComplete() {\r\n        this.send('render-complete', null);\r\n    }\r\n\r\n    blockHover(model) {\r\n        this.send('hover', { id: model.id });\r\n    }\r\n\r\n    selectBlock(model) {\r\n        this.send('open', model ? { id: model.id } : null);\r\n    }\r\n\r\n    private send(message: string, model) {\r\n        const msg = { type: message, ...model };\r\n        console.log(msg);\r\n        window.parent.postMessage(msg, this.parentOrigin);\r\n    }\r\n}","import { ListController } from './list.controller';\r\n\r\nexport class App {\r\n\r\n    constructor(private controller: ListController) { }\r\n\r\n    run() {\r\n        this.init();\r\n        this.reloadResources();\r\n        // this.ready();\r\n    }\r\n\r\n    private init() {\r\n        window.addEventListener('message', (event: MessageEvent) => {\r\n            var data = event.data;\r\n            this.controller.messageReceived(data);\r\n        });\r\n    }\r\n\r\n    private reloadResources() {\r\n        var urlParams = new URLSearchParams(window.location.search);\r\n        var prefix = urlParams.get('preview_mode');\r\n        var suffix = \"?preview_mode=\" + prefix + \"&v=\" + (new Date().getTime());\r\n\r\n        var nodes = document.getElementsByTagName(\"link\");\r\n        var head = document.getElementsByTagName(\"head\").item(0);\r\n\r\n        function generateLinkNode(url) {\r\n            var result = document.createElement(\"link\");\r\n            result.setAttribute(\"rel\", \"stylesheet\");\r\n            result.setAttribute(\"type\", \"text/css\");\r\n            result.setAttribute(\"href\", url);\r\n            return result;\r\n        }\r\n\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            var styleSheet = nodes[i];\r\n            if (styleSheet.href && styleSheet.href.startsWith(document.location.origin) && styleSheet.href.endsWith(\".css\")) {\r\n                var url = styleSheet.href + suffix;\r\n                var newlink = generateLinkNode(url);\r\n                head.replaceChild(newlink, styleSheet);\r\n            }\r\n        }\r\n    }\r\n\r\n    // private syncView() {\r\n    //     // sync container's children with blocks list\r\n    //     this.blocks.forEach((block, index) => {\r\n    //         const element = this.container.children.item(index);\r\n    //         if (!element) {\r\n    //             this.container.appendChild(block.element);\r\n    //         } else if (element != block.element){\r\n    //             this.container.replaceChild(block.element, element);\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n\r\n\r\n    // private reloadPage(data: MessagePageModel) {\r\n    //     // data.content = [{}] - list of blocks\r\n    //     this.blocks = [];\r\n    //     data.content.filter(x => x.type !== 'settings').forEach(x => this.addBlock(<BlockModel>{\r\n    //         id: x.id,\r\n    //         source: x,\r\n    //         html: '',\r\n    //         element: null\r\n    //     }));\r\n\r\n    //     Promise.all(this.blocks.map(x => this.doRequest(x))).then(() => {\r\n    //         this.syncView();\r\n    //         window.parent.postMessage({ type: 'render-complete' }, this.DesignerUrl);\r\n    //     })\r\n    // }\r\n\r\n    // private moveBlock(data: MessageModel) {\r\n    //     const current = this.blocks[data.content.currentIndex];\r\n    //     this.blocks.splice(data.content.currentIndex, 1);\r\n    //     this.blocks.splice(data.content.newIndex, 0, current);\r\n    //     this.scrollTo({ content: { id: current.id } });\r\n    // }\r\n\r\n    // private cloneBlock(data: MessageModel) {\r\n    //     /* data = { type: \"clone\", content: { source: id, destination: id } } */\r\n    //     const block = this.getBlock(data.content.source);\r\n    //     const index = this.blocks.indexOf(block);\r\n    //     const newBlock = {\r\n    //         ...block,\r\n    //         id: data.content.destination,\r\n    //         element: this.createElement(block.html)\r\n    //     };\r\n    //     this.addBlock(newBlock, index + 1);\r\n    //     this.selectBlock({ content: { id: data.content.destination } });\r\n    // }\r\n\r\n    // private addOrUpdate(data: MessageModel) {\r\n    //     if (!!data.content) {\r\n    //         const model = this.getBlock(data.content.id) || <BlockModel>{ id: data.content.id };\r\n    //         model.source = data.content;\r\n    //         this.addBlock(model);\r\n    //         this.doRequest(model).then(() => {\r\n    //             this.syncView();\r\n    //             this.selectBlock(data);\r\n    //         });\r\n    //     }\r\n    // }\r\n\r\n    // private removeBlock(data: MessageModel) {\r\n    //     const block = this.deleteBlock(data.content.id);\r\n    //     block.element.remove();\r\n    // }\r\n\r\n    // private selectedBlock: BlockModel = null;\r\n    // private selectBlock(data: MessageModel) {\r\n    //     const block = this.getBlock(data.content.id);\r\n    //     if (!!this.selectedBlock && this.selectedBlock != block) {\r\n    //         this.selectedBlock.element.className = this.selectedBlock.element.className.split(' ').filter(c => c.trim() != 'active').join(' ');\r\n    //         this.selectedBlock = null;\r\n    //     }\r\n    //     if (!!block && this.selectedBlock != block) {\r\n    //         block.element.className += ' active';\r\n    //         this.selectedBlock = block;\r\n    //     }\r\n    // }\r\n\r\n    // private scrollTo(data: MessageModel) {\r\n    //     const block = this.getBlock(data.content.id);\r\n    //     // scroll to block.element\r\n    // }\r\n\r\n    // private createElement(html: string): HTMLElement {\r\n    //     const div = document.createElement('div');\r\n    //     div.innerHTML = html;\r\n    //     const result = <HTMLElement>div.firstChild;\r\n    //     return result;\r\n    // }\r\n\r\n    // private doRequest(model: BlockModel): Promise<BlockModel> {\r\n    //     return this.http.post(model.source).then(html => {\r\n    //         model.html = html;\r\n    //         model.element = this.createElement(html);\r\n    //         return model;\r\n    //     })\r\n    // }\r\n\r\n    // todo: select\r\n    // todo: dnd\r\n\r\n    // private ready() {\r\n    //     var urlParams = new URLSearchParams(window.location.search);\r\n    //     var prefix = urlParams.get('preview_mode');\r\n    //     var suffix = \"?preview_mode=\" + prefix + \"&v=\" + (new Date().getTime());\r\n\r\n    //     var nodes = document.getElementsByTagName(\"link\");\r\n    //     var head = document.getElementsByTagName(\"head\").item(0);\r\n\r\n    //     function generateLinkNode(url) {\r\n    //         var result = document.createElement(\"link\");\r\n    //         result.setAttribute(\"rel\", \"stylesheet\");\r\n    //         result.setAttribute(\"type\", \"text/css\");\r\n    //         result.setAttribute(\"href\", url);\r\n    //         return result;\r\n    //     }\r\n\r\n    //     for (var i = 0; i < nodes.length; i++) {\r\n    //         var styleSheet = nodes[i];\r\n    //         if (styleSheet.href && styleSheet.href.startsWith(document.location.origin) && styleSheet.href.endsWith(\".css\")) {\r\n    //             var url = styleSheet.href + suffix;\r\n    //             var newlink = generateLinkNode(url);\r\n    //             head.replaceChild(newlink, styleSheet);\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    // private addBlock(model: BlockModel, index: number = null) {\r\n    //     const key = this.asKey(model.id);\r\n    //     const current = this.getBlock(model.id);\r\n    //     if (!!current) {\r\n    //         const index = this.blocks.indexOf(current);\r\n    //         this.blocks[index] = model;\r\n    //     } else {\r\n    //         if (index !== null) {\r\n    //             this.blocks.splice(index, 0, model);\r\n    //         } else {\r\n    //             this.blocks.push(model);\r\n    //         }\r\n\r\n    //     }\r\n    //     this.blocks[key] = model;\r\n    // }\r\n\r\n    // private getBlock(id: number): BlockModel {\r\n    //     const key = this.asKey(id);\r\n    //     return this.blocks[key];\r\n    // }\r\n\r\n    // private deleteBlock(id: number) : BlockModel{\r\n    //     const key = this.asKey(id);\r\n    //     const block = this.getBlock(id);\r\n    //     delete this.blocks[key];\r\n    //     const index = this.blocks.indexOf(block);\r\n    //     this.blocks.splice(index, 1);\r\n    //     return block;\r\n    // }\r\n\r\n    // private asKey(id: number): string {\r\n    //     return `instanse${id}`;\r\n    // }\r\n}\r\n\r\n\r\n","import { BlockViewModel } from './block.view-model';\r\nimport { BlockEventListener } from './block.event-listener';\r\n\r\nexport class View {\r\n\r\n    private highlightDiv: HTMLElement;\r\n    private selectDiv: HTMLElement;\r\n\r\n    eventListener: BlockEventListener;\r\n\r\n    constructor(private container: HTMLElement) {\r\n        this.highlightDiv = this.createShadowElement();\r\n        this.selectDiv = this.createShadowElement();\r\n        document.body.appendChild(this.highlightDiv);\r\n        document.body.appendChild(this.selectDiv);\r\n\r\n        this.highlightDiv.style.border = '3px dotted #33ada9';\r\n        this.selectDiv.style.border = '3px solid #33ada9';\r\n        this.highlightDiv.addEventListener('mouseleave', () => {\r\n            this.highlightDiv.style.display = 'none';\r\n        })\r\n        this.highlightDiv.addEventListener('click', (event) => {\r\n            this.eventListener.elementClick();\r\n            this.placeElementHover(this.highlightDiv, this.selectDiv);\r\n            this.unlight();\r\n        })\r\n        this.selectDiv.addEventListener('click', (event) => {\r\n            this.eventListener.elementClick();\r\n            this.placeElementHover(this.selectDiv, this.highlightDiv);\r\n            this.deselect();\r\n        })\r\n    }\r\n\r\n    highlight(model: BlockViewModel) {\r\n        this.placeElementHover(model.element, this.highlightDiv);\r\n    }\r\n\r\n    unlight() {\r\n        this.highlightDiv.style.display = 'none';\r\n    }\r\n\r\n    select(model: BlockViewModel) {\r\n        this.placeElementHover(model.element, this.selectDiv);\r\n    }\r\n\r\n    deselect() {\r\n        this.selectDiv.style.display = 'none';\r\n    }\r\n\r\n    scrollTo(model: BlockViewModel) {\r\n        const rect = this.measureElement(model.element);\r\n        const targetPosition = rect.top - window.innerHeight / 10;\r\n        window.scroll({\r\n            top: targetPosition,\r\n            behavior: 'smooth'\r\n        });\r\n    }\r\n\r\n    setList(list: BlockViewModel[]) {\r\n        this.container.innerHTML = '';\r\n        list.forEach(x => this.container.appendChild(x.element));\r\n    }\r\n\r\n    insertElement(index: number, model: BlockViewModel) {\r\n        const currentElement = this.container.children.item(index);\r\n        this.container.insertBefore(model.element, currentElement);\r\n    }\r\n\r\n    setElement(index: number, model: BlockViewModel) {\r\n        const element = model.element;\r\n        if (this.container.children.length > index) {\r\n            const currentElement = this.container.children.item(index);\r\n            if (currentElement != element) {\r\n                this.container.replaceChild(element, currentElement);\r\n                this.select(model);\r\n            }\r\n        } else {\r\n            this.container.appendChild(element);\r\n        }\r\n    }\r\n\r\n    private placeElementHover(source: HTMLElement, target: HTMLElement) {\r\n        const rect = this.measureElement(source);\r\n        target.style.top = rect.top + 'px';\r\n        target.style.left = rect.left + 'px';\r\n        target.style.height = (rect.height - 6) + 'px';\r\n        target.style.width = (rect.width - 6) + 'px';\r\n        target.style.display = 'block';\r\n\r\n    }\r\n\r\n    private createShadowElement() {\r\n        const result = document.createElement('div');\r\n        result.style.position = 'absolute';\r\n        result.style.display = 'none';\r\n        result.style.zIndex = '10000';\r\n        return result;\r\n    }\r\n\r\n    private measureElement(element): { top?: number, left?: number, height?: number, width?: number } {\r\n        const target = element;\r\n        const target_width = target.offsetWidth;\r\n        const target_height = target.offsetHeight;\r\n        let rect = {};\r\n        let gleft = 0;\r\n        let gtop = 0;\r\n\r\n        var moonwalk = function (_parent) {\r\n            if (!!_parent) {\r\n                gleft += _parent.offsetLeft;\r\n                gtop += _parent.offsetTop;\r\n                moonwalk(_parent.offsetParent);\r\n            } else {\r\n                return rect = {\r\n                    top: target.offsetTop + gtop,\r\n                    left: target.offsetLeft + gleft,\r\n                    height: target_height,\r\n                    width: target_width\r\n                };\r\n            }\r\n        };\r\n        moonwalk(target.offsetParent);\r\n        return rect;\r\n    }\r\n\r\n}","import { BlockEventListener } from './block.event-listener';\r\nimport { MessageModel, MessagePageModel } from './models/message.model';\r\nimport { View } from './view';\r\nimport { BlockViewModel } from './block.view-model';\r\nimport { BlockModel } from './models';\r\nimport { HttpService } from './services/http.service';\r\nimport { MessagesService } from './services/messages.service';\r\n\r\nexport class ListController implements BlockEventListener {\r\n\r\n    private blocks: BlockViewModel[] = [];\r\n    private selectedBlock: BlockViewModel;\r\n    private highlightedBlock: BlockViewModel;\r\n\r\n    constructor(private view: View, private http: HttpService, private messageSerice: MessagesService) {\r\n        view.eventListener = this;\r\n    }\r\n\r\n    // #region events\r\n\r\n    private renderComplete() {\r\n        this.messageSerice.renderComplete();\r\n    };\r\n\r\n    messageReceived(message: MessageModel) {\r\n        switch (message.type) {\r\n            case 'addOrUpdate':\r\n                this.addOrUpdate(message);\r\n                break;\r\n            case 'settings':\r\n                document.location.reload();\r\n                break;\r\n            case 'scrollTo':\r\n                this.scrollTo(message);\r\n                break;\r\n            case 'select':\r\n                this.selectBlock(message);\r\n                break;\r\n            case 'remove':\r\n                this.removeBlock(message);\r\n                break;\r\n            case 'clone':\r\n                this.cloneBlock(message);\r\n                break;\r\n            case 'page':\r\n                this.reloadPage(<MessagePageModel>message);\r\n                break;\r\n            case 'move':\r\n                this.moveBlock(message);\r\n                break;\r\n            default:\r\n                console.log(message.type, message);\r\n                break;\r\n        }\r\n    }\r\n\r\n    elementHover(source: BlockViewModel) {\r\n        if (!!this.highlightedBlock) {\r\n            this.view.unlight();\r\n            this.highlightedBlock = null;\r\n        }\r\n        if (this.selectedBlock !== source && !!source) {\r\n            this.highlightedBlock = source;\r\n            this.view.highlight(source);\r\n        }\r\n        this.messageSerice.blockHover(source.model);\r\n\r\n    };\r\n\r\n    elementClick() {\r\n        const vm = (!this.selectedBlock || this.selectedBlock !== this.highlightedBlock) ? this.highlightedBlock : null;\r\n        this.selectedBlock = vm;\r\n        this.messageSerice.selectBlock(vm ? vm.model: null);\r\n    };\r\n\r\n    // #endregion\r\n\r\n    // #region public\r\n\r\n    addOrUpdate(message: MessageModel) {\r\n        this.removeBlockById(null);\r\n        if (!!message.content) {\r\n            const key = this.asKey(message.content.id);\r\n            const vm = this.getBlock(key) || this.createBlockViewModel(message.content);\r\n            vm.model = message.content;\r\n            const index = this.setBlock(key, vm);\r\n            this.generateElement(vm, true).then(x => {\r\n                this.view.setElement(index, vm);\r\n            });\r\n        }\r\n    }\r\n\r\n    /** */\r\n    scrollTo(message: MessageModel) {\r\n        const vm = this.getBlockById(message.content.id);\r\n        this.view.scrollTo(vm);\r\n    }\r\n\r\n    /** */\r\n    selectBlock(message: MessageModel) {\r\n        if (!!this.selectedBlock) {\r\n            this.view.deselect();\r\n        }\r\n        const vm = this.getBlockById(message.content.id);\r\n        if (vm) {\r\n            this.view.select(vm);\r\n        }\r\n        this.selectedBlock = vm;\r\n    }\r\n\r\n    removeBlock(message: MessageModel) {\r\n        this.removeBlockById(message.content.id);\r\n    }\r\n\r\n    cloneBlock(message: MessageModel) {\r\n        const block = this.getBlockById(message.content.source);\r\n        const index = this.blocks.indexOf(block);\r\n        const newBlock = this.createBlockViewModel({...block.model});\r\n        newBlock.model.id = message.content.destination;\r\n        newBlock.fromHtml(block.html);\r\n        this.view.insertElement(index + 1, newBlock);\r\n        this.addBlock(newBlock, index + 1);\r\n        this.selectBlock({ content: { id: message.content.destination } });\r\n    }\r\n\r\n    reloadPage(message: MessagePageModel) {\r\n        this.blocks = [];\r\n        message.content.filter(x => x.type !== 'settings').forEach(x => this.addBlock(this.createBlockViewModel(x)));\r\n        this.render();\r\n    }\r\n\r\n    moveBlock(message: MessageModel) {\r\n        const current = this.blocks[message.content.currentIndex];\r\n        this.blocks.splice(message.content.currentIndex, 1);\r\n        this.blocks.splice(message.content.newIndex, 0, current);\r\n        this.scrollTo({ content: { id: current.model.id } });\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region private\r\n\r\n    private render() {\r\n        const promises = this.blocks.map((x) => this.generateElement(x));\r\n        Promise.all(promises).then(() => {\r\n            this.view.setList(this.blocks);\r\n            this.raiseRenderComplete();\r\n        });\r\n    }\r\n\r\n    private generateElement(vm: BlockViewModel, force: boolean = false): Promise<BlockViewModel> {\r\n        if (force || !vm.element) {\r\n            return this.http.post(vm.model).then(html => {\r\n                vm.fromHtml(html);\r\n                return vm;\r\n            });\r\n        }\r\n        return Promise.resolve(vm);\r\n    }\r\n\r\n    private raiseRenderComplete() {\r\n        this.renderComplete();\r\n    }\r\n\r\n    private removeBlockById(id: number) {\r\n        const key = this.asKey(id);\r\n        const vm = this.getBlock(key);\r\n        if (!!vm) {\r\n            const index = this.blocks.indexOf(vm);\r\n            if (this.selectedBlock == vm) {\r\n                this.selectedBlock = null;\r\n            }\r\n            vm.remove();\r\n            this.blocks.splice(index, 1);\r\n            delete this.blocks[key];\r\n        }\r\n    }\r\n\r\n    private addBlock(block: BlockViewModel, index: number = null) {\r\n        if (index === null) {\r\n            this.blocks.push(block);\r\n        } else {\r\n            this.blocks.splice(index, 0, block);\r\n        }\r\n        this.setBlockById(block.model.id, block);\r\n    }\r\n\r\n    private setBlock(key: string, vm: BlockViewModel): number {\r\n        let index = this.blocks.indexOf(vm);\r\n        if (index === -1) {\r\n            index = this.blocks.length;\r\n            this.blocks.push(vm);\r\n        }\r\n        this.blocks[key] = vm;\r\n        return index;\r\n    }\r\n\r\n    private setBlockById(id: number, vm: BlockViewModel) {\r\n        const key = this.asKey(id);\r\n        this.setBlock(key, vm);\r\n    }\r\n\r\n    private getBlock(key: string): BlockViewModel {\r\n        return this.blocks[key];\r\n    }\r\n\r\n    private getBlockById(id: number): BlockViewModel {\r\n        const key = this.asKey(id);\r\n        return this.getBlock(key);\r\n    }\r\n\r\n    private asKey(id: number): string {\r\n        if (!!id || id == 0)\r\n            return `instanse${id}`;\r\n        return 'preview-instance';\r\n    }\r\n\r\n    private createBlockViewModel(model: BlockModel) {\r\n        const result = new BlockViewModel(model);\r\n        result.eventListener = this;\r\n        return result;\r\n    }\r\n\r\n    // #endregion\r\n}\r\n","import { BlockEventListener } from './block.event-listener';\r\nimport { BlockModel } from './models';\r\n\r\nexport class BlockViewModel {\r\n    private _model: BlockModel;\r\n    html: string;\r\n    element: HTMLElement;\r\n\r\n    get model() {\r\n        return this._model;\r\n    }\r\n\r\n    set model(value: BlockModel) {\r\n        if (this._model != value) {\r\n            this._model = value;\r\n        }\r\n    }\r\n\r\n    eventListener: BlockEventListener;\r\n\r\n    private hoverListener = () => this.eventListener.elementHover(this);\r\n\r\n    constructor(model: BlockModel) {\r\n        this.model = model;\r\n    }\r\n\r\n    fromHtml(html: string) {\r\n        this.html = html;\r\n        this.createElement();\r\n    }\r\n\r\n    remove() {\r\n        if (!!this.element) {\r\n            this.eventListener = null;\r\n            this.element.remove();\r\n        }\r\n    }\r\n\r\n    private createElement() {\r\n        if (this.element) {\r\n            this.element.removeEventListener('mouseover', this.hoverListener);\r\n            // this.element.remove();\r\n        }\r\n        const div = document.createElement('div');\r\n        div.innerHTML = `<div>${this.html}</div>`;\r\n        const result = <HTMLElement>div.firstChild;\r\n        result.addEventListener('mouseover', this.hoverListener);\r\n        // TODO: add events\r\n        //      hover\r\n        //      mouse up\r\n        //      mouse down\r\n        //      mouse move\r\n        this.element = result;\r\n    }\r\n\r\n}\r\n","export const Environment = {\r\n    RenderBlockApiUrl: '/designer-preview/block',\r\n    DesignerUrl: 'http://localhost/'\r\n}\r\n"],"sourceRoot":""}